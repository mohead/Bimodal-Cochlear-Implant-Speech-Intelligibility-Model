#[MHAVersion 4.4]
# dynamic compression
# parser "mhaconfig_in":
# 
# Input configuration
# parser "mhaconfig_out":
# 
# Output configuration
# Input level is summed accross channels
# bool
powersum = no

# gaintable data in dB gains
# matrix<float>
gtdata = [[50.1540146 49.5867043 49.0193939 48.4520836 47.8847771 47.3174667 46.7501564 46.1828461 45.6155396 45.0482292 44.4809189 43.9136086 43.3462982 42.7789917 42.2116814 41.644371 41.0770607 40.5097504 39.9424438 39.3751335 38.8078232 38.2405128 37.6732025 37.105896 36.5385857 35.9712753 35.403965 34.8366547 34.2693481 33.7020378 33.1347275 32.5674171 32.0001068 31.4327984 30.86549 30.2981796 29.7308693 29.1635609 28.5962505 28.0289421 27.4616318 26.8943233 26.327013 25.7597027 25.1923943 24.6250839 24.0577755 23.4904652 22.9231548 22.3558464 21.7885361 21.2212276 20.6539173 20.086607 19.5192986 18.9519882 18.3846798 17.8173695 17.2500591 16.6827507 16.1154404 15.548131 14.9808216 14.4135122 13.8462029 13.2788935 12.7115831 12.1442738 11.5769644 11.009655 10.4423456 9.87503624 9.30772591 8.74041653 8.17310715 7.60579777 7.03848791 6.47117853 5.90386915 5.3365593 4.76924992 4.20194006 3.63463068 3.06732106 2.50001168 1.93270206 1.36539245 0.798082948 0.230773389 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[60.5760612 59.9185257 59.260994 58.6034584 57.9459229 57.2883911 56.6308556 55.97332 55.3157883 54.6582527 54.0007172 53.3431854 52.6856499 52.0281143 51.3705826 50.713047 50.0555115 49.3979797 48.7404442 48.0829086 47.4253769 46.7678413 46.1103058 45.452774 44.7952385 44.1377029 43.4801712 42.8226357 42.1651001 41.5075684 40.8500328 40.1924973 39.5349655 38.87743 38.2198944 37.5623627 36.9048271 36.2472916 35.5897598 34.9322243 34.2746925 33.617157 32.9596214 32.3020897 31.6445541 30.9870186 30.3294849 29.6719513 29.0144176 28.3568821 27.6993484 27.0418148 26.3842793 25.7267456 25.069212 24.4116764 23.7541428 23.0966091 22.4390736 21.7815399 21.1240063 20.4664707 19.8089371 19.1514034 18.4938679 17.8363342 17.1788006 16.5212669 15.8637314 15.2061977 14.5486631 13.8911295 13.2335949 12.5760603 11.9185266 11.2609921 10.6034575 9.94592381 9.28838921 8.63085556 7.97332096 7.31578684 6.65825224 6.00071812 5.34318399 4.68564939 4.02811527 3.37058115 2.71304679 2.05551267 1.39797843 0.740444124 0.0829098895 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[74.5614777 73.9039459 73.2464142 72.5888748 71.9313431 71.2738113 70.616272 69.9587402 69.3012085 68.6436691 67.9861374 67.3286057 66.6710663 66.0135345 65.3560028 64.6984634 64.0409317 63.3833961 62.7258644 62.0683289 61.4107971 60.7532616 60.095726 59.4381943 58.7806587 58.1231232 57.4655914 56.8080559 56.1505203 55.4929886 54.835453 54.1779175 53.5203857 52.8628502 52.2053146 51.5477829 50.8902473 50.2327118 49.5751801 48.9176445 48.2601089 47.6025772 46.9450417 46.2875061 45.6299744 44.9724388 44.3149033 43.6573715 42.999836 42.3423004 41.6847687 41.0272331 40.3696976 39.7121658 39.0546303 38.3970947 37.739563 37.0820274 36.4244957 35.7669601 35.1094246 34.4518929 33.7943573 33.1368217 32.47929 31.8217545 31.1642208 30.5066853 29.8491516 29.191618 28.5340824 27.8765488 27.2190151 26.5614796 25.9039459 25.2464123 24.5888767 23.9313431 23.2738094 22.6162739 21.9587402 21.3012066 20.643671 19.9861374 19.3286037 18.6710701 18.0135345 17.3560009 16.6984673 16.0409317 15.3833981 14.7258635 14.0683298 13.4107952 12.7532606 12.095727 11.4381924 10.7806587 10.1231241 9.46558952 8.80805588 8.15052128 7.49298716 6.83545256 6.17791843 5.52038431 4.86285019 4.20531559 3.54778147 2.89024734 2.23271298 1.57517886 0.91764456 0.260110319 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]

# input level for first gain entry in dB SPL
# vector<float>
gtmin = [-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10]

# level step size in dB
# vector<float>
gtstep = [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]

# RMS level averaging time constant in s
# vector<float>
tau_rmslev = [0.0199999996 0.0199999996 0.0199999996 0.0199999996 0.0199999996 0.0199999996 0.0199999996 0.0199999996 0.0199999996 0.0199999996 0.0199999996 0.0199999996 0.0199999996 0.0199999996 0.0199999996 0.0199999996 0.0199999996 0.0199999996]

# attack time constant in s
# vector<float>
tau_attack = [0.0199999996]

# decay time constant in s
# vector<float>
tau_decay = [0.100000001]

# Name of fftfilterbank plugin.  Used to extract frequency information.
# string
fb = fftfilterbank

# name of audio channel number variable (empty: broadband)
# string
chname = fftfilterbank_nchannels

# bypass dynamic compression
# bool
bypass = no

# Client ID of last fit
# string
clientid = HH000101

# Gain rule of last fit
# string
gainrule = camfit_cicand_left

# Preset name of last fit
# string
preset = 

# maximum level difference in dB between adjacent bands
# matrix<float>:[0,[
max_level_difference = [[]]

# Use wideband inhibition?
# bool
use_wbinhib = no

# parser "wbinhib":
# 
# weighting of neighbour frequencies
# vector<float>
wbinhib.weights = [1 2 4 4 4 2 1]

# mapping of level/broadband level ratio (in dB) into inhibition ratio, lower value means full inhibition
# float
wbinhib.dl_map_min = -8

# mapping of level/broadband level ratio (in dB) into inhibition ratio, upper value means no inhibition
# float
wbinhib.dl_map_max = 2

# level threshold, inhibition starts above this level
# float
wbinhib.l_min = 40

# scaling factor of inhibition gain
# matrix<float>
wbinhib.g_scale = [[1]]

