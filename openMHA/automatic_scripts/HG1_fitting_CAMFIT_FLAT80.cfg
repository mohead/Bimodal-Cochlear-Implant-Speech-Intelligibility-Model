#[MHAVersion 4.4]
# dynamic compression
# parser "mhaconfig_in":
# 
# Input configuration
# parser "mhaconfig_out":
# 
# Output configuration
# Input level is summed accross channels
# bool
powersum = no

# gaintable data in dB gains
# matrix<float>
gtdata = [[80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 79.8409119 79.1833801 78.5258408 77.868309 77.2107773 76.5532379 75.8957062 75.2381744 74.5806351 73.9231033 73.2655716 72.6080322 71.9505005 71.2929688 70.6354294 69.9778976 69.3203659 68.6628265 68.0052948 67.3477631 66.6902237 66.032692 65.3751602 64.7176208 64.0600891 63.4025536 62.7450218 62.0874863 61.4299507 60.772419 60.1148834 59.4573479 58.7998161 58.1422806 57.484745 56.8272133 56.1696777 55.5121422 54.8546104 54.1970749 53.5395393 52.8820076 52.224472 51.5669365 50.9094048 50.2518692 49.5943336 48.9368019 48.2792664 47.6217308 46.9641991 46.3066635 45.649128 44.9915962 44.3340607 43.6765289 43.0189934 42.3614578 41.7039261 41.0463905 40.388855 39.7313232 39.0737877 38.4162521 37.7587204 37.1011848 36.4436493 35.7861176 35.128582 34.4710464 33.8135147 33.1559792 32.4984436 31.84091 31.1833763 30.5258427 29.8683071 29.2107735 28.5532398 27.8957043 27.2381706 26.580637 25.9231033 25.2655678 24.6080341 23.9505005 23.2929649 22.6354313 21.9778976 21.3203621 20.6628284 20.0052948 19.3477592 18.6902256 18.032692 17.3751564 16.7176228 16.0600891];[80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 79.4996796 78.8421402 78.1846085 77.5270767 76.8695374 76.2120056 75.5544739 74.8969345 74.2394028 73.581871 72.9243317 72.2667999 71.6092682 70.9517288 70.2941971 69.6366653 68.979126 68.3215942 67.6640625 67.0065231 66.3489914 65.6914597 65.0339203 64.3763885 63.718853 63.0613213 62.4037857 61.7462502 61.0887184 60.4311829 59.7736473 59.1161156 58.45858 57.8010445 57.1435127 56.4859772 55.8284416 55.1709099 54.5133743 53.8558388 53.198307 52.5407715 51.8832359 51.2257042 50.5681686 49.9106331 49.2531013 48.5955658 47.9380302 47.2804985 46.622963 45.9654312 45.3078957 44.6503601 43.9928284 43.3352928 42.6777573 42.0202255 41.36269 40.7051544 40.0476227 39.3900871 38.7325516 38.0750198 37.4174843 36.7599487 36.102417 35.4448814 34.7873459 34.1298141 33.4722786 32.814743 32.1572113 31.4996758 30.8421421 30.1846066 29.5270729 28.8695393 28.2120056 27.5544701 26.8969364 26.2394028 25.5818672 24.9243336 24.2667999 23.6092644 22.9517307 22.2941971 21.6366615 20.9791279 20.3215942 19.6640587 19.006525 18.3489914 17.6914577 17.0339222 16.3763885 15.718854 15.0613194 14.4037857 13.7462511 13.0887175 12.4311829 11.7736483 11.1161146 10.45858];[80 80 80 80 80 80 80 79.9587402 79.3012085 78.6436691 77.9861374 77.3286057 76.6710663 76.0135345 75.3560028 74.6984634 74.0409317 73.3834 72.7258606 72.0683289 71.4107971 70.7532578 70.095726 69.4381943 68.7806549 68.1231232 67.4655914 66.8080521 66.1505203 65.4929886 64.8354492 64.1779175 63.5203857 62.8628502 62.2053146 61.5477829 60.8902473 60.2327118 59.5751801 58.9176445 58.2601089 57.6025772 56.9450417 56.2875061 55.6299744 54.9724388 54.3149033 53.6573715 52.999836 52.3423004 51.6847687 51.0272331 50.3696976 49.7121658 49.0546303 48.3970947 47.739563 47.0820274 46.4244957 45.7669601 45.1094246 44.4518929 43.7943573 43.1368217 42.47929 41.8217545 41.1642189 40.5066872 39.8491516 39.1916161 38.5340843 37.8765488 37.2190132 36.5614815 35.9039459 35.2464104 34.5888786 33.9313431 33.2738075 32.6162758 31.9587402 31.3012066 30.643671 29.9861374 29.3286037 28.6710701 28.0135345 27.3560009 26.6984673 26.0409317 25.3833981 24.7258644 24.0683289 23.4107952 22.7532616 22.095726 21.4381924 20.7806587 20.1231232 19.4655895 18.8080559 18.1505222 17.4929867 16.835453 16.1779194 15.5203838 14.8628502 14.2053156 13.5477819 12.8902473 12.2327127 11.5751791 10.9176445 10.2601099 9.60257626 8.94504166 8.28750801 7.62997341 6.97243929 6.31490469 5.65737057];[80 80 80 80 80 80 80 80 80 79.6976242 79.0400925 78.3825531 77.7250214 77.0674896 76.4099503 75.7524185 75.0948868 74.4373474 73.7798157 73.1222839 72.4647446 71.8072128 71.1496811 70.4921417 69.83461 69.1770782 68.5195389 67.8620071 67.2044754 66.546936 65.8894043 65.2318726 64.5743332 63.9168015 63.2592697 62.6017342 61.9441986 61.2866669 60.6291313 59.9715958 59.314064 58.6565285 57.9989929 57.3414612 56.6839256 56.0263901 55.3688583 54.7113228 54.0537872 53.3962555 52.7387199 52.0811844 51.4236526 50.7661171 50.1085815 49.4510498 48.7935143 48.1359787 47.478447 46.8209114 46.1633759 45.5058441 44.8483086 44.190773 43.5332413 42.8757057 42.2181702 41.5606384 40.9031029 40.2455673 39.5880356 38.9305 38.2729683 37.6154327 36.9578972 36.3003654 35.6428299 34.9852943 34.3277626 33.6702271 33.0126915 32.3551598 31.6976242 31.0400906 30.382555 29.7250214 29.0674877 28.4099522 27.7524185 27.0948849 26.4373493 25.7798157 25.122282 24.4647465 23.8072128 23.1496792 22.4921436 21.83461 21.1770763 20.5195427 19.8620071 19.2044735 18.5469398 17.8894043 17.2318707 16.574337 15.9168024 15.2592678 14.6017332 13.9441996 13.286665 12.6291304 11.9715967 11.3140621 10.6565285 9.99899387 9.34145927 8.68392563 8.02639103 7.36885691 6.71132278];[80 80 80 80 80 80 80 80 80 79.6010666 78.9435272 78.2859955 77.6284637 76.9709244 76.3133926 75.6558609 74.9983215 74.3407898 73.6832581 73.0257187 72.368187 71.7106552 71.0531158 70.3955841 69.7380524 69.080513 68.4229813 67.7654495 67.1079102 66.4503784 65.7928467 65.1353073 64.4777756 63.8202438 63.1627083 62.5051727 61.847641 61.1901054 60.5325699 59.8750381 59.2175026 58.559967 57.9024353 57.2448997 56.5873642 55.9298325 55.2722969 54.6147614 53.9572296 53.2996941 52.6421585 51.9846268 51.3270912 50.6695557 50.0120239 49.3544884 48.6969528 48.0394211 47.3818855 46.72435 46.0668182 45.4092827 44.7517471 44.0942154 43.4366798 42.7791443 42.1216125 41.464077 40.8065453 40.1490097 39.4914742 38.8339424 38.1764069 37.5188713 36.8613396 36.203804 35.5462685 34.8887367 34.2312012 33.5736656 32.9161339 32.2585983 31.6010647 30.9435291 30.2859955 29.6284618 28.9709263 28.3133926 27.655859 26.9983234 26.3407898 25.6832561 25.0257206 24.368187 23.7106533 23.0531197 22.3955841 21.7380505 21.0805168 20.4229813 19.7654476 19.107914 18.4503784 17.7928448 17.1353111 16.4777756 15.8202419 15.1627083 14.5051737 13.8476391 13.1901054 12.5325708 11.8750362 11.2175026 10.559968 9.9024334 9.24489975 8.58736515 7.92983103 7.27229691 6.61476278];[80 80 80 80 80 79.7406845 79.0831528 78.425621 77.7680817 77.1105499 76.4530182 75.7954788 75.1379471 74.4804153 73.822876 73.1653442 72.5078125 71.8502731 71.1927414 70.5352097 69.8776703 69.2201385 68.5626068 67.9050674 67.2475357 66.590004 65.9324646 65.2749329 64.6174011 63.9598656 63.30233 62.6447945 61.9872627 61.3297272 60.6721916 60.0146599 59.3571243 58.6995888 58.042057 57.3845215 56.7269859 56.0694542 55.4119186 54.7543831 54.0968513 53.4393158 52.7817802 52.1242485 51.466713 50.8091774 50.1516457 49.4941101 48.8365746 48.1790428 47.5215073 46.8639717 46.20644 45.5489044 44.8913689 44.2338371 43.5763016 42.9187698 42.2612343 41.6036987 40.946167 40.2886314 39.6310959 38.9735641 38.3160286 37.658493 37.0009613 36.3434258 35.6858902 35.0283585 34.3708229 33.7132874 33.0557556 32.3982201 31.7406864 31.0831509 30.4256172 29.7680836 29.110548 28.4530144 27.7954807 27.1379452 26.4804115 25.8228779 25.1653442 24.5078087 23.850275 23.1927414 22.5352058 21.8776722 21.2201385 20.562603 19.9050694 19.2475357 18.5900002 17.9324665 17.2749329 16.6173973 15.9598637 15.30233 14.6447954 13.9872608 13.3297272 12.6721926 12.014658 11.3571243 10.6995897 10.0420561 9.38452148 8.72698689 8.06945324 7.41191864 6.75438452 6.0968504 5.4393158 4.78178167 4.12424755];[80 79.4472885 78.7897568 78.132225 77.4746857 76.8171539 76.1596222 75.5020828 74.8445511 74.1870193 73.52948 72.8719482 72.2144165 71.5568771 70.8993454 70.2418137 69.5842743 68.9267426 68.2692108 67.6116714 66.9541397 66.296608 65.6390686 64.9815369 64.3240051 63.6664696 63.008934 62.3514023 61.6938667 61.0363312 60.3787994 59.7212639 59.0637283 58.4061966 57.748661 57.0911255 56.4335938 55.7760582 55.1185226 54.4609909 53.8034554 53.1459198 52.4883881 51.8308525 51.173317 50.5157852 49.8582497 49.2007141 48.5431824 47.8856468 47.2281113 46.5705795 45.913044 45.2555084 44.5979767 43.9404411 43.2829056 42.6253738 41.9678383 41.3103065 40.652771 39.9952354 39.3377037 38.6801682 38.0226326 37.3651009 36.7075653 36.0500298 35.392498 34.7349625 34.0774269 33.4198952 32.7623596 32.1048241 31.4472904 30.7897568 30.1322231 29.4746876 28.8171539 28.1596203 27.5020847 26.8445511 26.1870174 25.5294819 24.8719482 24.2144146 23.556881 22.8993454 22.2418118 21.5842781 20.9267426 20.2692089 19.6116753 18.9541397 18.2966061 17.6390724 16.9815369 16.3240032 15.6664686 15.008935 14.3514004 13.6938667 13.0363321 12.3787975 11.7212639 11.0637293 10.4061947 9.74866104 9.09112644 8.4335928 7.7760582 7.11852407 6.46098948 5.80345535 5.14592123 4.48838711 3.83085275 3.17331839 2.51578426 1.8582499 1.20071566];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]

# input level for first gain entry in dB SPL
# vector<float>
gtmin = [-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10]

# level step size in dB
# vector<float>
gtstep = [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]

# RMS level averaging time constant in s
# vector<float>
tau_rmslev = []

# attack time constant in s
# vector<float>
tau_attack = [0.0199999996]

# decay time constant in s
# vector<float>
tau_decay = [0.100000001]

# Name of fftfilterbank plugin.  Used to extract frequency information.
# string
fb = fftfilterbank

# name of audio channel number variable (empty: broadband)
# string
chname = fftfilterbank_nchannels

# bypass dynamic compression
# bool
bypass = no

# Client ID of last fit
# string
clientid = 8F000101

# Gain rule of last fit
# string
gainrule = camfit_cicand_left

# Preset name of last fit
# string
preset = 

# maximum level difference in dB between adjacent bands
# matrix<float>:[0,[
max_level_difference = [[]]

# Use wideband inhibition?
# bool
use_wbinhib = no

# parser "wbinhib":
# 
# weighting of neighbour frequencies
# vector<float>
wbinhib.weights = [1 2 4 4 4 2 1]

# mapping of level/broadband level ratio (in dB) into inhibition ratio, lower value means full inhibition
# float
wbinhib.dl_map_min = -8

# mapping of level/broadband level ratio (in dB) into inhibition ratio, upper value means no inhibition
# float
wbinhib.dl_map_max = 2

# level threshold, inhibition starts above this level
# float
wbinhib.l_min = 40

# scaling factor of inhibition gain
# matrix<float>
wbinhib.g_scale = [[1]]

